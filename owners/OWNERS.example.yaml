# AMPHTML uses a custom owners bot to enforce ownership rules across its
# codebase to ensure that all incoming pull requests are reviewed by the right
# people. This file is an example of the supported format.

# OWNERS files support standard YAML syntax, including comments and blank lines.
# In this file, "this directory" refers to the directory containing the
# OWNERS.yaml file.

# IMPORTANT NOTE: YAML syntax does not like non-alphanumeric characters to start
# dictionary keys, so patterns or globs starting with `*`, as well as owners 
# declarations with the `?` or `#` modifiers, must be wrapped in quotes to
# ensure it is parsed correctly. For consistency, it is preferred to wrap all
# patterns and globs in quotes.

# The top-level structure must be a list. Any usernames in this top-level list
# will be considered owners of all files and subdirectories of this directory.
- someuser

# Usernames should not be prefixed with '@'. This will raise a parsing error.
# - @dontdothis
- dothisinstead
- "@thiswillworkbutdontdoit"

# GitHub teams are also supported as owners. When a team is declared as an
# owner, it is treated the same as if all members of the team were listed as
# owners individually (see https://github.com/orgs/ampproject/teams).
- ampproject/wg-cool-team

# Individual filenames can be listed, with owners as the value. The value can be
# a single owner on the same line, or a list of many on the following lines.
# These users own the file matching that name within this directory. For
# example, if this file were in the root directory, the first rule below means
# `fileowner` owns `./package.json` but not `./examples/package.json`.
- package.json: fileowner
- .eslintrc:
  - styleperson
  - infraperson

# Glob-like patterns may be used in place of literal filenames. In these
# patterns, a star `*` can represent any sequence of characters. These patterns
# follow the same directory rules as above, so the pattern `*.js` applies to
# `./main.js` and `./index.js` but not `./extensions/script.js`.
- "*.js": scripter
- "package*.json":
  - infraperson
  - developer

# To apply a filename or pattern to all subdirectories as well, prefix the
# pattern with `**/`. The pattern `**/.eslintrc` applies to
# `./.eslintrc` as well as `./foo/.eslintrc`. The pattern `**/*.protoascii`
# applies to `./test.protoascii` as well as `./foo/example.protoascii`.
- "**/.eslintrc": styleperson
- "**/*.protoascii":
  - languageperson
  - translator

# Any other use of `/` in a pattern is forbidden (ie. no directory traversal).
# Patterns using `/` will be ignored. If rules are needed in a subdirectory, the
# appropriate OWNERS file should be created/updated in that subdirectory.
- this/pattern/will/be/ignored.txt: doesntmatter

# Filename and pattern rules may be combined with brace expansion. The pattern
# parser uses `[minimatch](https://www.npmjs.com/package/minimatch)`, the
# matching library used internally by npm.
- "*.{js,css}": frontend
- "package.{,lock.}json": somebodyelse

# Prepending a user or team name with a `?` will prevent this owner from being
# automatically notified or requested as a reviewer. They are still an owner,
# may still be requested or tagged manually.
- "**/*.css": "?someoneimportant"
- "yarn.lock": "?ampproject/important-team"

# Alternately, the `#` modifier will ensure that the user is @mentioned in any
# PR touching those files, even if they are not added as a reviewer. The bot
# will add a comment to these PRs to notify the owners.
- "**/*.test.js": "#stakeholder"
- "**/validator-*.{out,html}": "#ampproject/wg-caching"


# The result of parsing this file would be a tree with these rules:
#
# */**: someuser, dothisinstead, thiswillworkbutdontdoit
# ampproject/wg-cool-team [member, othermember, etc]
# ./package.json: fileowner
# ./.eslintrc: styleperson, infraperson
# ./*.js: scripter
# ./package*.json: infraperson, developer
# **/.eslintrc: styleperson
# **/*.protoascii: languageperson, translator
# *.{js,css}: frontend
# package.{,lock.}json: somebodyelse
# **/.eslintrc: somebodyelse
# **/*.css: someoneimportant (never notify)
# ./yarn.lock: ampproject/important-team (never notify)
# **/*.test.js: stakeholder (always notify)
# **/validator-*.{out,html}: ampproject/wg-caching (always notify)

# For any questions about the owners bot or supported syntax, contact @rcebulko
# or @ampproject/wg-infra.
